{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f27\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Tahoma;}
{\f28\fnil\fcharset2\fprq0{\*\panose 00000000000000000000}Monotype Sorts{\*\falt ZapfDingbats};}{\f66\froman\fcharset238\fprq2 Times New Roman CE;}{\f67\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f69\froman\fcharset161\fprq2 Times New Roman Greek;}
{\f70\froman\fcharset162\fprq2 Times New Roman Tur;}{\f71\froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f72\froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f73\froman\fcharset186\fprq2 Times New Roman Baltic;}
{\f282\fswiss\fcharset238\fprq2 Tahoma CE;}{\f283\fswiss\fcharset204\fprq2 Tahoma Cyr;}{\f285\fswiss\fcharset161\fprq2 Tahoma Greek;}{\f286\fswiss\fcharset162\fprq2 Tahoma Tur;}{\f287\fswiss\fcharset177\fprq2 Tahoma (Hebrew);}
{\f288\fswiss\fcharset178\fprq2 Tahoma (Arabic);}{\f289\fswiss\fcharset186\fprq2 Tahoma Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;
\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{
\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 Normal;}{\s1\qc \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 
\shad\f27\fs44\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 1;}{\s2\ql \fi-270\li270\ri0\nowidctlpar\faauto\rin0\lin270\itap0 \shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 2;}{
\s3\ql \fi-225\li585\ri0\nowidctlpar\faauto\rin0\lin585\itap0 \shad\f27\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 3;}{\s4\ql \fi-180\li900\ri0\nowidctlpar\faauto\rin0\lin900\itap0 
\shad\f27\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 4;}{\s5\ql \fi-180\li1260\ri0\nowidctlpar\faauto\rin0\lin1260\itap0 \shad\f27\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 5;}
{\s6\ql \fi-180\li1620\ri0\nowidctlpar\faauto\rin0\lin1620\itap0 \shad\f27\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 6;}{\*\cs10 \additive Default Paragraph Font;}}{\*\listtable{\list\listtemplateid-140092556
\listsimple{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat0\levelspace0\levelindent0{\leveltext\'01*;}{\levelnumbers;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 }{\listname ;}\listid-2}}{\*\listoverridetable
{\listoverride\listid-2\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent0{\leveltext\'01\u-3986 ?;}{\levelnumbers;}\f28\fs24\chbrdr
\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 }}\ls1}{\listoverride\listid-2\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent0
{\leveltext\'01\'96;}{\levelnumbers;}\f27\fs24\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 }}\ls2}{\listoverride\listid-2\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0
\levelstartat0\levelold\levelspace0\levelindent0{\leveltext\'01\'96;}{\levelnumbers;}\f27\fs28\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 }}\ls3}{\listoverride\listid-2\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc23
\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent0{\leveltext\'01\u-3986 ?;}{\levelnumbers;}\f28\fs14\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 }}\ls4}{\listoverride\listid-2
\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent0{\leveltext\'01\u-3986 ?;}{\levelnumbers;}\f28\fs21\chbrdr\brdrnone\brdrcf1 
\chshdng0\chcfpat1\chcbpat1\fbias0 }}\ls5}}{\info{\title CURSORS}{\author labasst3}{\operator efaculty1}{\creatim\yr2006\mo3\dy24\hr15\min40}{\revtim\yr2006\mo9\dy21\min7}{\version10}{\edmins226}{\nofpages18}{\nofwords2378}{\nofchars13560}{\*\company met}
{\nofcharsws0}{\vern8247}}\widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\horzdoc\dghspace120\dgvspace120\dghorigin1701\dgvorigin1984\dghshow0\dgvshow3\jcompress\viewkind1\viewscale160\nolnhtadjtbl \fet0\sectd 
\linex0\sectdefaultcl {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang
{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8
\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \s1\ql \li0\ri0\nowidctlpar\faauto\outlinelevel0\rin0\lin0\itap0 
\shad\f27\fs44\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\fs48 CURSORS
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Objectives :}{\shad0\fs28 
\par {\pntext\pard\plain\s3 \f27 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard\plain \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls2\pnrnot0\pnf27\pnfs24 {\pntxtb \'96}}\faauto\ls2\outlinelevel2\rin0\lin585\itap0 
\shad\f27\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\fs24 Explain what is a cursor 
\par {\pntext\pard\plain\s3 \f27 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls2\pnrnot0\pnf27\pnfs24 {\pntxtb \'96}}\faauto\ls2\outlinelevel2\rin0\lin585\itap0 {\shad0\fs24 List the types of cursors

\par {\pntext\pard\plain\s3 \f27 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls2\pnrnot0\pnf27\pnfs24 {\pntxtb \'96}}\faauto\ls2\outlinelevel2\rin0\lin585\itap0 {\shad0\fs24 
List & explain implicit cursor & its attributes
\par {\pntext\pard\plain\s3 \f27 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls2\pnrnot0\pnf27\pnfs24 {\pntxtb \'96}}\faauto\ls2\outlinelevel2\rin0\lin585\itap0 {\shad0\fs24 
State & explain syntax for declaring, opening and fetching data from explicit cursors
\par {\pntext\pard\plain\s3 \f27 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls2\pnrnot0\pnf27\pnfs24 {\pntxtb \'96}}\faauto\ls2\outlinelevel2\rin0\lin585\itap0 {\shad0\fs24 
List & explain explicit cursor attributes
\par {\pntext\pard\plain\s3 \f27 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls2\pnrnot0\pnf27\pnfs24 {\pntxtb \'96}}\faauto\ls2\outlinelevel2\rin0\lin585\itap0 {\shad0\fs24 Explain a cursor FOR LOOP

\par {\pntext\pard\plain\s3 \f27 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls2\pnrnot0\pnf27\pnfs24 {\pntxtb \'96}}\faauto\ls2\outlinelevel2\rin0\lin585\itap0 {\shad0\fs24 
Construct a PL/SQL programs using cursors}{\shad0 
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs44\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\fs20 
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 What is a cursor ?
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard\plain \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 
\shad\f27\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 A cursor is a PL/SQL construct that lets you individually manipulate each row in a set of rows returned by a query
\par }\pard\plain \ql \li0\ri0\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard\plain \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 
\shad\f27\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 A Cursor allows row by row processing of a data in a table
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs44\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 
\par Cursor Management in PL/SQL
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 When SQL commands are executed, ORACLE uses work areas 
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 
This storage area is called the Implicit Cursor
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 
PL/SQL allows users to name the private work areas and access the stored information
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 
Cursor attributes are predefined variables that are helpful in finding out the details about the Cursor
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs44\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 
\par CURSORS
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 There are two types of Cursors
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard\plain \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 
\shad\f27\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Implicit Cursors 
\par {\pntext\pard\plain\s4 \f28\fs14 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s4\ql \fi-180\li900\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls4\pnrnot0\pnf28\pnfs14 {\pntxtb n}}\faauto\ls4\outlinelevel3\rin0\lin900\itap0 
\shad\f27\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 An Implicit Cursor is created implicitly by PL/SQL
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard\plain \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 
\shad\f27\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Explicit Cursors 
\par {\pntext\pard\plain\s4 \f28\fs14 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s4\ql \fi-180\li900\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls4\pnrnot0\pnf28\pnfs14 {\pntxtb n}}\faauto\ls4\outlinelevel3\rin0\lin900\itap0 
\shad\f27\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 An Explicit Cursor is a user defined cursor
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs44\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 
\par \line Implicit Cursor
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Created by ORACLE automatically with default name SQL
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 
You cannot process data by using an Implicit cursor
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 
You can use certain attributes to access information about the most recently executed statement
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 
Attributes are prefixed by keyword SQL
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 Implicit Cursor attributes are :

\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard\plain \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 
\shad\f27\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 SQL%NOTFOUND
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 {\shad0 SQL%FOUND
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 {\shad0 SQL%ROWCOUNT
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 {\shad0 SQL%ISOPEN
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs44\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 
\par Implicit Cursor
\par }\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 \shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 \tab }{\shad0\fs28 Attribute \tab \tab \tab 
Description 
\par }\pard \s2\ql \fi-1980\li2160\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin2160\itap0 {\b\shad0\fs24 SQL%NOTFOUND}{\shad0\fs24  \tab Result of the DML statement (BOOLEAN )\tab \tab \tab - TRUE if not successful 
\tab \tab \tab \tab \tab - FALSE if successful
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0\fs24 \tab 
\par }\pard \s2\ql \fi-1935\li2160\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin2160\itap0 {\b\shad0\fs24 SQL%FOUND\tab }{\shad0\fs24 \tab Result of the DML statement (BOOLEAN ) \tab \tab - TRUE is successful (i.e. 
\tab \tab \tab \tab \tab DML returned at least one \tab \tab \tab \tab \tab row) 
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0\fs24 \tab \tab \tab \tab \tab - FALSE if not successful
\par }{\b\shad0\fs24 \tab SQL%ROWCOUNT}{\shad0\fs24 \tab Contains number of rows \tab  
\par \tab ( NUMBER )\tab \tab affected by last SQL statement
\par \tab 
\par }\pard \s2\ql \fi-1860\li2160\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin2160\itap0 {\b\shad0\fs24 SQL%ISOPEN}{\shad0\fs24 \tab \tab FALSE always because ORACLE ( BOOLEAN ) \tab \tab au
tomatically closes implicit \tab \tab \tab \tab cursor after executing its \tab \tab \tab \tab \tab SQL statement
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 Cursor methods
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard\plain \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 
\shad\f27\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Open 
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 {\shad0 Fetch and 
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 {\shad0 Close methods 
\par }\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel2\rin0\lin585\itap0 {\shad0 cannot be used with implicit Cursor SQL
\par }\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 \shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs44\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 
\par Implicit Cursor
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Example 
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0 \tab }{\b\shad0\fs20 DECLARE}{\shad0\fs20  
\par \tab \tab v_RowsAffected \tab Number (6);
\par \tab }{\b\shad0\fs20 BEGIN}{\shad0\fs20  
\par \tab \tab UPDATE emp SET comm = 500 \tab \tab 
\par \tab \tab WHERE job = \lquote SALESMAN\rquote ;
\par \tab \tab v_RowsAffected := SQL%ROWCOUNT;
\par \tab \tab INSERT INTO Updated_Records 
\par \tab \tab VALUES (\lquote EMP\rquote , v_RowsAffected, \lquote SALESMAN\rquote , SYSDATE);
\par \tab }{\b\shad0\fs20 END}{\shad0\fs20 ;
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs44\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 
\par Explicit Cursor
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 An Explicit Cursor is a user defined cursor 
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 PL/SQL allows you to proces
s the rows returned by a query by using an Explicit Cursor
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 
You can process data in an Explicit Cursor
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 
Defined in the Declaration Section of the PL/SQL Block
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 
Manipulation is done through OPEN, FETCH and CLOSE statements
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 
Processing information can be accessed using its attributes
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 
Steps in using Explicit Cursor are :
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard\plain \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 
\shad\f27\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Declaring a Cursor 
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 {\shad0 Opening a Cursor
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 {\shad0 
Fetching rows from an opened Cursor 
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 {\shad0 Closing a Cursor
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs44\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 
\par Declaring a cursor
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 A cursor is defined in the declaration section of the PL/SQL block 
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 Declaring a curso
r is defining its active set of rows
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 
This active set of rows can be used to view or modify data
\par }\pard\plain \ql \li0\ri0\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par 
\par 
\par 
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Syntax :
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0 
\par \tab CURSOR <cursor_name> [(<parameter_list>)]
\par \tab IS <SELECT \'85\'85\'85\'85\'85\'85statement >;\tab 
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 \tab Example 1 :
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0 \tab }{\shad0\fs20 \tab }{\b\shad0\fs20 DECLARE}{\shad0\fs20  
\par \tab \tab \tab CURSOR emp_cursor IS 
\par \tab \tab \tab SELECT ename, job, sal FROM emp;
\par \tab \tab }{\b\shad0\fs20 BEGIN}{\shad0\fs20  
\par \tab \tab :
\par \tab \tab }{\b\shad0\fs20 END}{\shad0\fs20 ;
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs44\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 
\par Declaring a Parameterised Cursor
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 An explicit cursor can take parameters
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 
Using parameter you can decide active set at runtime
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0 
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 Example 1 :
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0 \tab }{\b\shad0\fs24 DECLARE}{\shad0\fs24  
\par \tab \tab CURSOR emp_cursor (p_job CHAR ) IS 
\par \tab \tab SELECT ename, sal, job FROM emp
\par \tab \tab WHERE job =p_job ;
\par \tab }{\b\shad0\fs24 BEGIN}{\shad0\fs24 
\par \tab :
\par \tab }{\b\shad0\fs24 END}{\shad0\fs24 ; 
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs44\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Opening  a Cursor
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 A cursor is to be opened before you can use it to read or modify data
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 When you open a cursor
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard\plain \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 
\shad\f27\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Its associated query is evaluated 
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 {\shad0 
The active set of rows become available
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Syntax :
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0 \tab OPEN <cursor_name> [(argument list)];
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 A cursor cannot be opened if 

\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard\plain \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 
\shad\f27\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 cursor has not been declared yet 
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 {\shad0 it is already open
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs44\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 
\par Fetching Data from a Cursor
\par {\pntext\pard\plain\s2 \f28\fs21 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls5\pnrnot0\pnf28\pnfs21 {\pntxtb n}}\faauto\ls5\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\fs28 When you open a cursor, the cursor points before the first row in the active set
\par {\pntext\pard\plain\s2 \f28\fs21 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls5\pnrnot0\pnf28\pnfs21 {\pntxtb n}}\faauto\ls5\outlinelevel1\rin0\lin270\itap0 {\shad0\fs28 
Each fetch operation retrieves a row from the active set
\par {\pntext\pard\plain\s2 \f28\fs21 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls5\pnrnot0\pnf28\pnfs21 {\pntxtb n}}\faauto\ls5\outlinelevel1\rin0\lin270\itap0 {\shad0\fs28 
First fetch command moves pointer to the first row and then retrieves that row
\par {\pntext\pard\plain\s2 \f28\fs21 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls5\pnrnot0\pnf28\pnfs21 {\pntxtb n}}\faauto\ls5\outlinelevel1\rin0\lin270\itap0 {\shad0\fs28 
Successive FETCH commands fetch successive rows
\par }\pard\plain \ql \li0\ri0\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Syntax :
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0 \tab FETCH <cursor_name> INTO 
\par \tab variable_name1, variable_name2 \'85\'85..;
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 
Variables after INTO clause in the FETCH command and column list in the SELECT statement  should have matching data types
\par }\pard\plain \s1\qc \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs44\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Example :
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\b\shad0\fs20 DECLARE}{\shad0\fs20 
\par \tab \tab v_empno \tab emp.empno%TYPE;
\par \tab \tab v_ename\tab emp.ename%TYPE;
\par \tab \tab v_sal\tab \tab emp.sal%TYPE; \tab 
\par \tab \tab CURSOR emp_cursor IS 
\par \tab \tab SELECT empno, ename, sal FROM emp;
\par }{\b\shad0\fs20 BEGIN}{\shad0\fs20 
\par \tab \tab OPEN emp_cursor;
\par \tab \tab  -- Fetches First Row
\par \tab \tab FETCH emp_cursor INTO v_empno, v_ename, v_sal;
\par \tab \tab -- Fetches Second Row
\par \tab \tab FETCH emp_cursor INTO v_empno, v_ename, v_sal; 
\par \tab \tab :
\par \tab \tab CLOSE emp_cursor;
\par }{\b\shad0\fs20 END}{\shad0\fs20 ;
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs44\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 
\par Cursor Processing Using a Loop:
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 You can fetch rows and process them without use of multiple statements
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0\fs10 
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 Example :
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0 \tab }{\shad0\fs24 OPEN emp_cursor; 
\par \tab LOOP
\par \tab \tab FETCH emp_cursor INTO v_empno, v_ename, v_sal;
\par \tab \tab EXIT WHEN emp_cursor%NOTFOUND;
\par }{\shad0\fs10 \tab \tab 
\par }{\shad0\fs24 \tab \tab -- process row here
\par }{\shad0\fs10 \tab 
\par }{\shad0\fs24 \tab END LOOP;
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs44\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 
\par Closing a Cursor :
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 You can use CLOSE statement to close the cursor 
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 The CLOSE statement
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard\plain \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 
\shad\f27\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 disables the cursor
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 {\shad0 relieves resources
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Syntax :
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0 \tab CLOSE <cursor_name>;
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 
You can reopen the cursor again, if required
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 
If you perform any operation on a closed cursor, the pre-defined exception INVALID_CURSOR is raised
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs44\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 
\par Explicit Cursor Attributes
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Each cursor has four attributes 
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 
Attributes are appended to the cursor name 
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0 \tab }{\b\shad0\fs24 Attribute\tab \tab Description
\par }{\shad0\fs24 \tab %NOTFOUND \tab Evaluates to TRUE, if the fetch \tab \tab \tab \tab failed i.e. no more rows are left
\par \tab %FOUND\tab \tab Evaluates to TRUE, if the last fetch \tab \tab \tab succeeded\tab 
\par }{\b\shad0\fs24 \tab Attribute\tab \tab Description}{\shad0  \tab 
\par }{\shad0\fs24 \tab %ROWCOUNT\tab Returns the number of rows \tab \tab \tab \tab fetched till now
\par \tab 
\par \tab %ISOPEN \tab \tab Evaluates to TRUE, if the cursor is open
\par 
\par }\pard\plain \ql \li0\ri0\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Example 1:
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0\fs24 LOOP
\par \tab FETCH emp_cursor INTO v_empno, v_ename, v_sal;
\par \tab EXIT WHEN emp_cursor%NOTFOUND;
\par \tab \'85\'85\'85\'85\'85..
\par END LOOP;
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs44\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Example 2 :
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0\fs24 LOOP
\par \tab FETCH emp_cursor INTO v_empno, v_ename, v_sal;
\par \tab IF emp_cursor%FOUND THEN 
\par \tab \tab -- do some processing 
\par \tab ELSE
\par \tab \tab Exit;
\par \tab END IF;
\par END LOOP;
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 Example 3 :
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0\fs24 :
\par FETCH emp_cursor INTO v_empno, v_ename, \tab v_sal;
\par IF emp_cursor%ROWCOUNT > 10 THEN 
\par -- do some processing 
\par END IF;
\par :
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 Example 4 :
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0\fs24 IF emp_cursor%ISOPEN THEN
\par \tab -- Cursor is open \tab 
\par \tab -- do some processing 
\par ELSE 
\par \tab Open emp_cursor;
\par \tab -- open cursor if not already open
\par END IF;
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 Example 5 :
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0\fs24 Open emp_cursor;
\par LOOP
\par \tab FETCH emp_cursor INTO v_empno, v_ename, v_sal;
\par \tab EXIT WHEN emp_cursor%NOTFOUND;
\par END LOOP;
\par v_counter := emp_cursor%ROWCOUNT;
\par IF emp_cursor%ROWCOUNT > 50 THEN 
\par \tab v_rowsover50 := TRUE;
\par END IF;
\par }\pard\plain \ql \li0\ri0\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs44\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Cursor For Loops
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Looping Constructs require explicit cursor processing
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 A Cursor FOR\'85
LOOP can simplify the code
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 A Cursor FOR\'85LOOP implicitly

\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard\plain \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 
\shad\f27\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Declares a record structure which stores fetched value
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 {\shad0 Opens Cursor implicitly

\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 {\shad0 Fetches one row at a time

\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 {\shad0 Closes the Cursor \tab 
\tab 
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Syntax :
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0 \tab FOR <row_var> IN <cursor_name> LOOP
\par \tab \tab <statements>
\par \tab END LOOP;
\par }{\shad0\fs18 
\par DECLARE 
\par \tab v_qohand \tab \tab itemmast.qoh%TYPE;
\par \tab /* Select those records which are not updated */
\par \tab CURSOR update_items IS 
\par \tab SELECT itno, trantype, qty FROM itemtran
\par \tab WHERE UPPER (updt) = \lquote N\rquote ;
\par \tab BEGIN
\par \tab FOR item IN update_items 
\par \tab LOOP \tab 
\par \tab \tab SELECT qoh INTO v_qohand FROM itemmast  
\par \tab \tab WHERE itno  = item.itno;
\par \tab \tab IF Upper(item.trantype) = \lquote R\rquote  THEN
\par \tab \tab \tab v_qohand := v_qohand + item.qty;
\par \tab \tab ELSE 
\par \tab \tab \tab v_qohand := v_qohand - item.qty;
\par \tab \tab END IF;
\par 
\par \tab \tab UPDATE \tab itemmast SET  qoh = v_qohand 
\par \tab \tab WHERE \tab itno = item.itno;
\par \tab \tab UPDATE \tab itemtran SET  updt = \lquote Y\rquote 
\par \tab \tab WHERE \tab itno = item.itno;
\par \tab END LOOP;
\par \tab COMMIT;
\par END;
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs44\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 
\par 
\par 
\par 
\par 
\par Declaring a cursor in cursor FOR LOOP
\par }\pard\plain \ql \li0\ri0\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 You can declare a cursor in a cursor FOR LOOP itself
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 
Cursor name in the FOR statement is replaced with the SELECT statement query
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 Example -
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\b\shad0\fs18 DECLARE}{\shad0\fs18 
\par \tab v_result NUMBER;
\par }{\b\shad0\fs18 BEGIN}{\shad0\fs18 
\par \tab FOR each_record IN (SELECT num1, num2, num3 FROM numtable)
\par \tab LOOP
\par \tab \tab v_result := (each_record.num1*45 /
\par \tab \tab each_record.num2) + each_record.num3;
\par \tab \tab INSERT INTO output_table
\par \tab \tab VALUES (v_result);
\par \tab END LOOP;
\par }{\b\shad0\fs18 END}{\shad0\fs18 ;
\par }\pard\plain \ql \li0\ri0\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par }\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 \shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\shad0\fs18 DECLARE}{\shad0\fs18 
\par    v_empno emp.empno%type;
\par    v_ename emp.ename%type;
\par    v_sal emp.sal%type;
\par }{\b\shad0\fs18 BEGIN}{\shad0\fs18 
\par    for cur_rec in (select empno,ename,sal from emp where deptno = 10)
\par    loop
\par    dbms_output.put_line(cur_rec.empno||' having name as'||cur_rec.ename|| ' has sal of Rs: '||cur_rec.sal);
\par    end loop;
\par }{\b\shad0\fs18 END}{\shad0\fs18 ;
\par }\pard\plain \ql \li0\ri0\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par }\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 \shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 
\par }{\shad0\fs44 Parameterized cursors
\par }\pard \s2\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin0\itap0 {
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\b\shad0\fs18 DECLARE}{\shad0\fs18 
\par }\pard \s2\ql \fi-270\li540\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin540\itap0 {\shad0\fs18 vename emp.ename%type;
\par vsal emp.sal%type;
\par }\pard \s2\ql \li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0\fs18 CURSOR cur_emp(p_deptno NUMBER) is SELECT ename,sal FROM emp WHERE deptno = p_deptno;
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\b\shad0\fs18 BEGIN}{\shad0\fs18 
\par }\pard \s2\ql \fi-270\li540\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin540\itap0 {\shad0\fs18 OPEN cur_emp(&deptno);
\par FETCH cur_emp INTO vename,vsal;
\par LOOP
\par }\pard \s2\ql \fi-270\li990\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin990\itap0 {\shad0\fs18 EXIT WHEN cur_emp%NOTFOUND;
\par DBMS_OUTPUT.PUT_LINE('Employee is '||vename||' has sal '||vsal);
\par FETCH cur_emp INTO vename,vsal;
\par }\pard \s2\ql \fi-270\li540\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin540\itap0 {\shad0\fs18 END LOOP;
\par CLOSE cur_emp;
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\b\shad0\fs18 END;
\par }\pard\plain \ql \li0\ri0\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par 
\par 
\par 
\par 
\par }\pard\plain \s2\ql \fi-270\li990\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin990\itap0 \shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\shad0\fs18 DECLARE
\par }{\shad0\fs18     vename emp.ename%type;
\par     vsal emp.sal%type;
\par     CURSOR cur_emp(p_deptno NUMBER) is SELECT ename,sal FROM emp    WHERE deptno = p_deptno
\par     FOR UPDATE OF sal;
\par }{\b\shad0\fs18  BEGIN
\par }{\shad0\fs18     OPEN cur_emp(&deptno);
\par     FETCH cur_emp INTO vename,vsal;
\par     LOOP
\par     EXIT WHEN cur_emp%NOTFOUND;
\par             IF vsal < 3000 THEN
\par                     UPDATE  emp SET sal = sal + 500 WHERE CURRENT OF CUR_EMP;
\par                     DBMS_OUTPUT.PUT_LINE('SALARY UPDATE FOR     '||vename||' TO '||vsal);
\par             END IF;
\par     FETCH cur_emp INTO vename,vsal;
\par     END LOOP;
\par  CLOSE cur_emp;
\par }{\b\shad0\fs18  END;}{\b 
\par }\pard\plain \ql \li0\ri0\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par }\pard\plain \s2\ql \fi-270\li990\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin990\itap0 \shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\fs18 
\par }{\b\shad0\fs18 DECLARE
\par }{\shad0\fs18    v_empno emp.empno%type;
\par    v_ename emp.ename%type;
\par    v_sal emp.sal%type;
\par    Cursor cur_emp is select empno,ename,sal from emp for update of sal;
\par }{\b\shad0\fs18 BEGIN
\par }{\shad0\fs18  \tab  for cur_rec in cur_emp
\par }\pard \s2\ql \li990\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin990\itap0 {\shad0\fs18  loop
\par }\pard \s2\ql \li1440\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin1440\itap0 {\shad0\fs18 dbms_output.put_line(cur_rec.empno||' having name as'||cur_rec.ename|| 'has sal of Rs: '||cur_rec.sal);
\par }\pard \s2\ql \li990\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin990\itap0 {\shad0\fs18  \tab if cur_rec.sal <3000 then 
\par }\pard \s2\ql \li1710\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin1710\itap0 {\shad0\fs18 cur_rec.sal:=cur_rec.sal+500;
\par update emp set sal = cur_rec.sal where current of cur_emp;
\par }\pard \s2\ql \fi450\li990\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin990\itap0 {\shad0\fs18 end if;
\par }\pard \s2\ql \li990\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin990\itap0 {\shad0\fs18 end loop;
\par }\pard \s2\ql \fi-270\li990\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin990\itap0 {\b\shad0\fs18 END;
\par }\pard\plain \ql \li0\ri0\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs44\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\fs60 
\par 
\par 
\par 
\par 
\par 
\par Exception}{\shad0\fs54  Handling}{\shad0 
\par {\pntext\pard\plain\s2 \f28\fs21 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls5\pnrnot0\pnf28\pnfs21 {\pntxtb n}}\faauto\ls5\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\fs28 Objectives :}{\shad0\fs24 
\par {\pntext\pard\plain\s3 \f27 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard\plain \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls2\pnrnot0\pnf27\pnfs24 {\pntxtb \'96}}\faauto\ls2\outlinelevel2\rin0\lin585\itap0 
\shad\f27\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\fs24 Identify the need of Exception handling
\par {\pntext\pard\plain\s3 \f27 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls2\pnrnot0\pnf27\pnfs24 {\pntxtb \'96}}\faauto\ls2\outlinelevel2\rin0\lin585\itap0 {\shad0\fs24 List types of Exceptions

\par {\pntext\pard\plain\s3 \f27 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls2\pnrnot0\pnf27\pnfs24 {\pntxtb \'96}}\faauto\ls2\outlinelevel2\rin0\lin585\itap0 {\shad0\fs24 
List the Pre-defined Exceptions
\par {\pntext\pard\plain\s3 \f27 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls2\pnrnot0\pnf27\pnfs24 {\pntxtb \'96}}\faauto\ls2\outlinelevel2\rin0\lin585\itap0 {\shad0\fs24 State & exp
lain how to declare a User-defined Exception
\par {\pntext\pard\plain\s3 \f27 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls2\pnrnot0\pnf27\pnfs24 {\pntxtb \'96}}\faauto\ls2\outlinelevel2\rin0\lin585\itap0 {\shad0\fs24 
State & explain how to raise Exception
\par {\pntext\pard\plain\s3 \f27 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls2\pnrnot0\pnf27\pnfs24 {\pntxtb \'96}}\faauto\ls2\outlinelevel2\rin0\lin585\itap0 {\shad0\fs24 
State & explain how to write an Exception handler
\par {\pntext\pard\plain\s3 \f27 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls2\pnrnot0\pnf27\pnfs24 {\pntxtb \'96}}\faauto\ls2\outlinelevel2\rin0\lin585\itap0 {\shad0\fs24 
List error reporting functions
\par {\pntext\pard\plain\s3 \f27 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls2\pnrnot0\pnf27\pnfs24 {\pntxtb \'96}}\faauto\ls2\outlinelevel2\rin0\lin585\itap0 {\shad0\fs24 
Construct PL/SQL programs with exception handling
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs44\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 
\par Exception Handling In PL/SQL
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 In PL/SQL, a warning or an error condition is called an Exception
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 When an error occurs
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard\plain \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 
\shad\f27\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 An exception is raised
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 {\shad0 
Normal execution stops and the control transfers to the exception handling section
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Exception can either be internally defined by runtime systems or can be user-defined
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard\plain \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 
\shad\f27\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Internal exceptions are raised automatically
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 {\shad0 
User-defined exceptions must be raised explicitly
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 {\shad0 
You can also raise internal exceptions explicitly
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs44\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 
\par Predefined Exceptions 
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Predefined exceptions are error conditions that are defined by ORACLE
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 Predef
ined exceptions can not be altered
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 
Predefined exceptions are raised automatically whenever a PL/SQL program violates an ORACLE rule
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 
If an action is to be taken for an exception, when raised, you require a handler for it
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 
Exception handler is written in the exception handling section of a PL/SQL block
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0 
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 
Some of the predefined exceptions are
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\b\shad0\fs24 
\par Exception Name\tab \tab \tab Description
\par }\pard \s2\ql \fi-2160\li2160\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin2160\itap0 {\shad0\fs24 CURSOR_ALREADY_OPEN\tab \tab Raised when you try to open an \tab \tab \tab \tab \tab already open cursor
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0\fs24 
\par }\pard \s2\ql \fi-3600\li3600\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin3600\itap0 {\shad0\fs24 DUP_VAL_ON_INDEX\tab Raised when you try to insert some duplicate va
lues in a table column with unique or primary key constraint
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0\fs24 INVALID_CURSOR\tab \tab \tab Raised when you do an illegal cursor \tab \tab \tab \tab \tab \tab \tab operation

\par 
\par }\pard \s2\ql \fi-3600\li3600\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin3600\itap0 {\shad0\fs24 INVALID_NUMBER\tab Raised when there is a failure of \tab 
conversion of CHAR type string to a number in a SQL statement
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0\fs24 
\par }\pard \s2\ql \fi-3600\li3600\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin3600\itap0 {\shad0\fs24 LOGIN_DENIED\tab Raised when you try to log on to \tab ORACLE with an invalid username or password
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0\fs28 
\par }\pard \s2\ql \fi-2880\li2880\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin2880\itap0 {\shad0\fs24 NO_DATA_FOUND\tab \tab Raised when SELECT ...INTO \tab \tab \tab \tab statement returns no rows
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0\fs24 
\par }\pard \s2\ql \fi-3600\li3600\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin3600\itap0 {\shad0\fs24 TOO_MANY_ROWS\tab Raised when SELECT ... INTO  statement returns more than one row}{\shad0\fs28 
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0\fs24 
\par }\pard \s2\ql \fi-3600\li3600\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin3600\itap0 {\shad0\fs24 PROGRAM_ERROR\tab Raised when PL/SQL runs out of memory or memory is corrupted
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0\fs24 
\par }\pard \s2\ql \fi-3600\li3600\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin3600\itap0 {\shad0\fs24 NOT_LOGED_ON\tab 
Raised when you execute a PL/SQL program referring to a database without actually logging on to the database
\par }\pard\plain \s1\qc \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs44\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 
\par }\pard \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 {\shad0 
\par 
\par 
\par 
\par 
\par User-Defined Exceptions
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 A User-Defined exception can be defined in the declarative section of PL/SQL Block
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0 
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 Syntax :
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0 \tab <exception_name> EXCEPTION;
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 Example :
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0 \tab }{\b\shad0\fs20 DECLARE}{\shad0\fs20 
\par \tab \tab :
\par \tab \tab INSUFFICIENT_BALANCE EXCEPTION;
\par \tab \tab :
\par \tab }{\b\shad0\fs20 BEGIN}{\shad0\fs20 
\par \tab \tab :
\par \tab }{\b\shad0\fs20 EXCEPTION}{\shad0\fs20 
\par \tab \tab :
\par \tab }{\b\shad0\fs20 END}{\shad0\fs20 ;
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs44\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 
\par Raising Exceptions
\par {\pntext\pard\plain\s2 \f28\fs21 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls5\pnrnot0\pnf28\pnfs21 {\pntxtb n}}\faauto\ls5\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\fs28 Once you have declared an exception, you can raise the exception in the program
\par {\pntext\pard\plain\s2 \f28\fs21 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls5\pnrnot0\pnf28\pnfs21 {\pntxtb n}}\faauto\ls5\outlinelevel1\rin0\lin270\itap0 {\shad0\fs28 
The keyword RAISE is used to raise an exception 
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0\fs14 
\par {\pntext\pard\plain\s2 \f28\fs21 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls5\pnrnot0\pnf28\pnfs21 {\pntxtb n}}\faauto\ls5\outlinelevel1\rin0\lin270\itap0 {\shad0\fs28 Syntax :
\par }\pard\plain \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel2\rin0\lin585\itap0 \shad\f27\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 RAISE <exception_name>;
\par }\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 \shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\fs14 
\par {\pntext\pard\plain\s2 \f28\fs21 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls5\pnrnot0\pnf28\pnfs21 {\pntxtb n}}\faauto\ls5\outlinelevel1\rin0\lin270\itap0 {\shad0\fs28 
Predefined exception can also be raised using RAISE keyword
\par }\pard\plain \ql \li0\ri0\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Example :
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0 \tab }{\b\shad0\fs24 DECLARE}{\shad0\fs24 
\par \tab \tab insufficient_balance EXCEPTION;
\par \tab }{\b\shad0\fs24 BEGIN}{\shad0\fs24 
\par \tab \tab :
\par \tab \tab IF credit_limit < sales_amount THEN
\par \tab \tab \tab RAISE insufficient_balance;
\par \tab \tab END IF;
\par \tab \tab :
\par \tab }{\b\shad0\fs24 END}{\shad0\fs24 ;
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs44\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 
\par 
\par Execution of Exceptions
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Once an exception is raised}{\shad0\fs28  
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard\plain \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 
\shad\f27\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 the control is transferred to the exception handling section of a PL/SQL block
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 {\shad0 
An associates exception handler, if found, is executed
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 {\shad0 If an associate
d exception handler is not found then control propagates to the outer block
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 {\shad0 
If exception handler is not found PL/SQL reports error
\par }\pard\plain \s1\qc \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs44\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Example 1:
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0 
\par }{\b\shad0\fs20 DECLARE}{\shad0\fs20 
\par \tab \tab  insufficient_balance EXCEPTION;
\par }{\b\shad0\fs20 BEGIN}{\shad0\fs20 
\par \tab \tab :
\par \tab \tab IF credit_limit < sales_amount THEN
\par \tab \tab \tab RAISE insufficient_balance;
\par \tab \tab END IF;
\par \tab \tab :
\par }{\b\shad0\fs20 EXCEPTION}{\shad0\fs20 
\par \tab \tab WHEN insufficient_balance THEN
\par \tab \tab INSERT INTO temp (char_store)
\par \tab \tab VALUES (`BALANCE IS INSUFFICIENT\rquote );
\par }{\b\shad0\fs20 END}{\shad0\fs20 ;
\par }\pard\plain \s1\qc \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs44\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 
\par }\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 \shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\shad0\fs20 DECLARE}{\shad0\fs20 
\par \tab v_cust_id \tab customer.custid%TYPE;
\par \tab v_credit_limit customer.creditlimit%TYPE;
\par }{\b\shad0\fs20 \tab }{\shad0\fs20 -- }{\b\shad0\fs20 user-defined exception}{\shad0\fs20 
\par \tab insufficient_balance EXCEPTION; 
\par }{\b\shad0\fs20 BEGIN}{\shad0\fs20 
\par \tab SELECT custid, creditlimit INTO v_cust_id, v_credit_limit FROM customer WHERE custname = `SEED\rquote ;
\par \tab IF v_credit_limit < v_sales_amount THEN\line \tab RAISE insufficient_balance;
\par \tab END IF;
\par \tab :
\par }{\b\shad0\fs20 EXCEPTION}{\shad0\fs20 
\par \tab WHEN no_data_found THEN  }{\b\shad0\fs20 -- predefined exception}{\shad0\fs20 
\par \tab \tab INSERT INTO temp(char_store)
\par \tab \tab VALUES (`CUSTOMER NOT PRESENT\rquote );
\par \tab WHEN insufficient_balance THEN }{\b\shad0\fs20 -- user-defined exception}{\shad0\fs20 
\par \tab \tab INSERT INTO temp(char_store) 
\par \tab \tab VALUES (`BALANCE IS INSUFFICIENT\rquote );
\par }{\b\shad0\fs20 END}{\shad0\fs20 ;
\par }\pard\plain \s1\qc \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs44\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Example 3 :
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0\fs18 
\par }{\b\shad0\fs18 DECLARE}{\shad0\fs18 
\par \tab }{\b\shad0\fs18 -- user-defined exception}{\shad0\fs18 
\par \tab out_of_stock EXCEPTION;
\par \tab v_qty_on_hand NUMBER(5);
\par }{\b\shad0\fs18 BEGIN}{\shad0\fs18 
\par \tab \'85
\par \tab IF v_qty_on_hand < 1 THEN
\par \tab \tab RAISE out_of_stock;
\par \tab END IF;
\par }{\b\shad0\fs18 EXCEPTION}{\shad0\fs18 
\par \tab WHEN out_of_stock THEN\line \tab INSERT INTO temp (char_store)
\par \tab \tab VALUES (`ITEM OUT OF STOCK\rquote );
\par \tab \'85
\par }{\b\shad0\fs18 END}{\shad0\fs18 ;
\par }\pard\plain \s1\qc \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs44\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 
\par }\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 \shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\shad0\fs18 Example : Scope rule for exceptions}{
\shad0\fs18 
\par }{\b\shad0\fs18 DECLARE}{\shad0\fs18 
\par }\pard\plain \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel2\rin0\lin585\itap0 \shad\f27\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\fs18 My_exception EXCEPTION;
\par }\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 \shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\shad0\fs18 BEGIN}{\shad0\fs18 
\par \tab --some code goes here
\par \tab }{\b\shad0\fs18 DECLARE -- start of a new sub block}{\shad0\fs18  
\par \tab \tab \tab Insufficient_balance EXCEPTION; \tab \tab 
\par \tab \tab \tab My_exception EXCEPTION;
\par \tab }{\b\shad0\fs18 BEGIN}{\shad0\fs18 
\par \tab \tab \tab \'85
\par \tab \tab \tab IF \'85 THEN
\par \tab \tab \tab \tab RAISE My_exception;
\par \tab \tab \tab END IF;
\par \tab \tab \tab \'85
\par \tab \tab \tab IF \'85 THEN
\par \tab \tab \tab \tab RAISE Insufficient_balance; }{\shad0\fs20 
\par \tab \tab \tab END IF;
\par \tab \tab \tab \'85}{\shad0\fs18 
\par }{\shad0\fs20 \tab \tab \tab IF \'85 THEN
\par \tab \tab \tab \tab RAISE NO_DATA_FOUND;
\par \tab \tab \tab \tab ...
\par \tab \tab \tab END IF;
\par \tab \tab \tab \'85
\par }{\shad0\fs18 \tab }{\b\shad0\fs18 EXCEPTION}{\shad0\fs18 
\par \tab \tab \tab WHEN Insufficient_balance THEN
\par \tab \tab \tab \tab \'85
\par \tab \tab }{\b\shad0\fs18 END;}{\shad0\fs18 \tab \tab }{\b\shad0\fs18 -- end of a new sub block}{\shad0\fs18  
\par 
\par }{\b\shad0\fs18 EXCEPTION}{\shad0\fs18 
\par \tab WHEN NO_DATA_FOUND THEN
\par \tab \tab \'85
\par \tab WHEN My_exception THEN
\par \tab \tab \'85
\par }{\b\shad0\fs18 END}{\shad0\fs18 ;}{\shad0\fs20 
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs44\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Handling Unnamed Exceptions
\par {\pntext\pard\plain\s2 \f28\fs21 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls5\pnrnot0\pnf28\pnfs21 {\pntxtb n}}\faauto\ls5\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\fs28 You may handle the unnamed exception by using an  OTHERS exception handler
\par {\pntext\pard\plain\s2 \f28\fs21 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls5\pnrnot0\pnf28\pnfs21 {\pntxtb n}}\faauto\ls5\outlinelevel1\rin0\lin270\itap0 {\shad0\fs28 
The OTHERS handler catches all the exceptions that the block does not name explicitly
\par {\pntext\pard\plain\s2 \f28\fs21 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls5\pnrnot0\pnf28\pnfs21 {\pntxtb n}}\faauto\ls5\outlinelevel1\rin0\lin270\itap0 {\shad0\fs28 
The OTHERS exception handler must be defined after all the exception handlers
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 Example :
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0 \tab }{\shad0\fs24 BEGIN
\par \tab \'85
\par \tab EXCEPTION
\par \tab WHEN no_data_found THEN
\par \tab \tab -- some code here 
\par \tab WHEN OTHERS THEN
\par \tab \tab ROLLBACK;\tab \tab 
\par \tab END;
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs44\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\fs20 
\par }{\shad0 Error Reporting Functions
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 When an error condition is encountered, you might need to know its error number and the message
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 
Error reporting functions can be used to get this information
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 These functions are
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard\plain \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 
\shad\f27\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 SQLCODE
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 {\shad0 SQLERRM
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs44\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\fs20 
\par }{\shad0 SQLCODE Function
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 SQLCODE function returns the error number associated with most recently raised exception
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 
SQLCODE function is used within an exception handler
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 
If you use outside it returns value zero
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs44\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\fs20 
\par }{\shad0 
\par 
\par 
\par SQLERRM Function 
\par {\pntext\pard\plain\s2 \f28\fs21 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls5\pnrnot0\pnf28\pnfs21 {\pntxtb n}}\faauto\ls5\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\fs28 SQLERRM function returns the error message associated with an Error Number
\par {\pntext\pard\plain\s2 \f28\fs21 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls5\pnrnot0\pnf28\pnfs21 {\pntxtb n}}\faauto\ls5\outlinelevel1\rin0\lin270\itap0 {\shad0\fs28 
SQLERRM function is used within an exception handler
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0\fs28 
\par {\pntext\pard\plain\s2 \f28\fs21 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls5\pnrnot0\pnf28\pnfs21 {\pntxtb n}}\faauto\ls5\outlinelevel1\rin0\lin270\itap0 {\shad0\fs28 
If you use outside it returns the message : ORA-0000: normal, successful completion
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 Example :
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0 \tab }{\b\shad0\fs18 DECLARE}{\shad0\fs18 
\par \tab \tab error_msg\tab VARCHAR (50);
\par \tab \tab error_num\tab NUMBER;
\par \tab }{\b\shad0\fs18 BEGIN}{\shad0\fs18 
\par \tab \tab \'85
\par \tab }{\b\shad0\fs18 EXCEPTION}{\shad0\fs18 
\par \tab \tab \'85
\par \tab WHEN OTHERS THEN
\par \tab \tab error_num := SQLCODE;
\par \tab \tab error_msg := SQLERRM (error_num);
\par \tab \tab INSERT INTO errors
\par \tab \tab VALUES (error_msg);
\par \tab }{\b\shad0\fs18 END}{\shad0\fs18 ;
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs44\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 
\par Example 1
\par {\pntext\pard\plain\s2 \f28\fs21 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls5\pnrnot0\pnf28\pnfs21 {\pntxtb n}}\faauto\ls5\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\fs28 Create a PL/SQL block which accepts a customer number from the user and checks whether there are rows matching the customer number in SALES Table
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0\fs14 
\par {\pntext\pard\plain\s2 \f28\fs21 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls5\pnrnot0\pnf28\pnfs21 {\pntxtb n}}\faauto\ls5\outlinelevel1\rin0\lin270\itap0 {\shad0\fs28 
Accordingly PL / SQL inserts a row in an OPERATIONS Table based on the following conditions
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard\plain \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 
\shad\f27\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 If no rows are found insert a row in OPERATIONS with a REMARK \'93No Rows Found\'94
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 {\shad0 
If more than one rows are found insert a row in OPERATIONS with a REMARK \'93Multiple Rows Found\'94
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 {\shad0 
If one row is found insert a row in OPERATIONS with a REMARK \'93One Row Found\'94
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 {\shad0 For other column
s, insert appropriate values. USER pseudo column can be used for USERNAME column
\par }\pard\plain \s1\qc \li0\ri0\nowidctlpar\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs44\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 
\par }\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar\faauto\outlinelevel1\rin0\lin270\itap0 \shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\shad0\fs18 
\par DECLARE}{\shad0\fs18  
\par \tab \tab p_custid sales.custid%TYPE;
\par }{\b\shad0\fs18 BEGIN}{\shad0\fs18  
\par \tab \tab p_custid := &customer_number
\par \tab SELECT custid INTO p_custid 
\par \tab \tab FROM sales 
\par \tab \tab WHERE custid = p_custid;
\par \tab \tab INSERT INTO operations 
\par \tab \tab VALUES( p_custid , \lquote ONE ORDER FOR THE CUSTOMER \rquote );
\par }{\b\shad0\fs18 EXCEPTION}{\shad0\fs18  
\par \tab \tab WHEN NO_DATA_FOUND THEN 
\par \tab \tab \tab INSERT INTO operations
\par \tab \tab \tab VALUES ( p_custid , \lquote NO ORDER FOR THE CUSTOMER \rquote );
\par \tab \tab WHEN TOO_MANY_ROWS THEN
\par \tab \tab \tab INSERT INTO operations
\par \tab \tab \tab VALUES (p_custid , \lquote MULTIPLE  ORDERS FOR THE CUSTOMER \rquote );
\par }{\b\shad0\fs18 END}{\shad0\fs18 ;
\par }{\shad0 
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par }}