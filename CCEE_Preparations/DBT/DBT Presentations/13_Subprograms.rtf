{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f14\fnil\fcharset2\fprq2{\*\panose 05000000000000000000}Wingdings;}{\f27\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Tahoma;}{\f28\fnil\fcharset2\fprq0{\*\panose 00000000000000000000}Monotype Sorts{\*\falt ZapfDingbats};}
{\f126\froman\fcharset238\fprq2 Times New Roman CE;}{\f127\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f129\froman\fcharset161\fprq2 Times New Roman Greek;}{\f130\froman\fcharset162\fprq2 Times New Roman Tur;}
{\f131\froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f132\froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f133\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f134\fswiss\fcharset238\fprq2 Arial CE;}
{\f135\fswiss\fcharset204\fprq2 Arial Cyr;}{\f137\fswiss\fcharset161\fprq2 Arial Greek;}{\f138\fswiss\fcharset162\fprq2 Arial Tur;}{\f139\fswiss\fcharset177\fprq2 Arial (Hebrew);}{\f140\fswiss\fcharset178\fprq2 Arial (Arabic);}
{\f141\fswiss\fcharset186\fprq2 Arial Baltic;}{\f342\fswiss\fcharset238\fprq2 Tahoma CE;}{\f343\fswiss\fcharset204\fprq2 Tahoma Cyr;}{\f345\fswiss\fcharset161\fprq2 Tahoma Greek;}{\f346\fswiss\fcharset162\fprq2 Tahoma Tur;}
{\f347\fswiss\fcharset177\fprq2 Tahoma (Hebrew);}{\f348\fswiss\fcharset178\fprq2 Tahoma (Arabic);}{\f349\fswiss\fcharset186\fprq2 Tahoma Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;
\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;
\red192\green192\blue192;}{\stylesheet{\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 Normal;}{\s1\qc \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 
\shad\f27\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 1;}{\s2\ql \fi-270\li270\ri0\nowidctlpar\faauto\rin0\lin270\itap0 \shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 2;}{
\s3\ql \fi-225\li585\ri0\nowidctlpar\faauto\rin0\lin585\itap0 \shad\f27\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 3;}{\s4\ql \fi-180\li900\ri0\nowidctlpar\faauto\rin0\lin900\itap0 
\shad\f27\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 4;}{\s5\ql \fi-180\li1260\ri0\nowidctlpar\faauto\rin0\lin1260\itap0 \shad\f27\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 5;}
{\s6\ql \fi-180\li1620\ri0\nowidctlpar\faauto\rin0\lin1620\itap0 \shad\f27\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 6;}{\*\cs10 \additive Default Paragraph Font;}}{\*\listtable{\list\listtemplateid-1239391958
\listsimple{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat0\levelspace0\levelindent0{\leveltext\'01*;}{\levelnumbers;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 }{\listname ;}\listid-2}}{\*\listoverridetable
{\listoverride\listid-2\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent0{\leveltext\'01\u-3986 ?;}{\levelnumbers;}\f28\fs24\chbrdr
\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 }}\ls1}{\listoverride\listid-2\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent0
{\leveltext\'01\'96;}{\levelnumbers;}\f27\fs24\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 }}\ls2}{\listoverride\listid-2\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0
\levelstartat0\levelold\levelspace0\levelindent0{\leveltext\'01\'96;}{\levelnumbers;}\f27\fs28\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 }}\ls3}{\listoverride\listid-2\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc23
\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent0{\leveltext\'01\u-3986 ?;}{\levelnumbers;}\f28\fs21\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 }}\ls4}{\listoverride\listid-2
\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent0{\leveltext\'01\u-3986 ?;}{\levelnumbers;}\f28\fs17\chbrdr\brdrnone\brdrcf1 
\chshdng0\chcfpat1\chcbpat1\fbias0 }}\ls5}{\listoverride\listid-2\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent0{\leveltext
\'01\u-3986 ?;}{\levelnumbers;}\f14\fs24\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 }}\ls6}{\listoverride\listid-2\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0
\levelstartat0\levelold\levelspace0\levelindent0{\leveltext\'01\u-3986 ?;}{\levelnumbers;}\f14\fs21\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 }}\ls7}{\listoverride\listid-2\listoverridecount1{\lfolevel\listoverrideformat{\listlevel
\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent0{\leveltext\'01\u-3986 ?;}{\levelnumbers;}\f14\fs27\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 }}\ls8}{\listoverride\listid-2
\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent0{\leveltext\'01\'96;}{\levelnumbers;}\f27\fs20\chbrdr\brdrnone\brdrcf1 
\chshdng0\chcfpat1\chcbpat1\fbias0 }}\ls9}{\listoverride\listid-2\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent0{\leveltext
\'01\u-3986 ?;}{\levelnumbers;}\f28\fs12\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 }}\ls10}{\listoverride\listid-2\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0
\levelstartat0\levelold\levelspace0\levelindent0{\leveltext\'01\u-3986 ?;}{\levelnumbers;}\f28\fs27\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 }}\ls11}{\listoverride\listid-2\listoverridecount1{\lfolevel\listoverrideformat{\listlevel
\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent0{\leveltext\'01\u-3986 ?;}{\levelnumbers;}\f28\fs18\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 }}\ls12}}{\info
{\title PL/SQL Subprograms Part I}{\author met}{\operator met}{\creatim\yr2005\mo10\dy2\hr14\min32}{\revtim\yr2006\mo9\dy22\hr10\min55}{\version6}{\edmins132}{\nofpages18}{\nofwords2441}{\nofchars13918}{\*\company iit}{\nofcharsws0}{\vern8247}}
\widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\horzdoc\dghspace120\dgvspace120\dghorigin1701\dgvorigin1984\dghshow0\dgvshow3\jcompress\viewkind1\viewscale100\nolnhtadjtbl \fet0\sectd \linex0\sectdefaultcl 
{\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5
\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang
{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \s1\ql \li0\ri0\nowidctlpar\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\fs48 
PL/SQL Subprograms }{\shad0\fs54 Part I
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Objectives :}{\shad0\fs24 
\par {\pntext\pard\plain\s3 \f27 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard\plain \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls2\pnrnot0\pnf27\pnfs24 {\pntxtb \'96}}\faauto\ls2\outlinelevel2\rin0\lin585\itap0 
\shad\f27\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\fs24 Describe what is a  PL/SQL module
\par {\pntext\pard\plain\s3 \f27 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls2\pnrnot0\pnf27\pnfs24 {\pntxtb \'96}}\faauto\ls2\outlinelevel2\rin0\lin585\itap0 {\shad0\fs24 
List the types of PL/SQL Modules
\par {\pntext\pard\plain\s3 \f27 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls2\pnrnot0\pnf27\pnfs24 {\pntxtb \'96}}\faauto\ls2\outlinelevel2\rin0\lin585\itap0 {\shad0\fs24 Define a subprogram 

\par {\pntext\pard\plain\s3 \f27 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls2\pnrnot0\pnf27\pnfs24 {\pntxtb \'96}}\faauto\ls2\outlinelevel2\rin0\lin585\itap0 {\shad0\fs24 
List advantages of subprograms 
\par {\pntext\pard\plain\s3 \f27 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls2\pnrnot0\pnf27\pnfs24 {\pntxtb \'96}}\faauto\ls2\outlinelevel2\rin0\lin585\itap0 {\shad0\fs24 List types of Subprograms

\par {\pntext\pard\plain\s3 \f27 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls2\pnrnot0\pnf27\pnfs24 {\pntxtb \'96}}\faauto\ls2\outlinelevel2\rin0\lin585\itap0 {\shad0\fs24 
State & explain syntax for creating a Procedure
\par {\pntext\pard\plain\s3 \f27 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls2\pnrnot0\pnf27\pnfs24 {\pntxtb \'96}}\faauto\ls2\outlinelevel2\rin0\lin585\itap0 {\shad0\fs24 Construct a procedure

\par {\pntext\pard\plain\s3 \f27 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls2\pnrnot0\pnf27\pnfs24 {\pntxtb \'96}}\faauto\ls2\outlinelevel2\rin0\lin585\itap0 {\shad0\fs24 
Identify the need for parameters
\par {\pntext\pard\plain\s3 \f27 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls2\pnrnot0\pnf27\pnfs24 {\pntxtb \'96}}\faauto\ls2\outlinelevel2\rin0\lin585\itap0 {\shad0\fs24 
List Parameter types & Parameter modes}{\shad0 
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 
\par Modular Programming
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Modularity involves decomposing a program into small, independent chunks of code that do a specific task
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 
Each independent program chunk is called as a module
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 
\par Features Of Modular Programs 
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Easy to read and understand 
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 Easy to modify
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 Fast to develop
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 
You can make PL/SQL programs modular by using named modules 
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 
\par PL/SQL MODULES
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 PL / SQL has two types of modules
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard\plain \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 
\shad\f27\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Subprograms 
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 {\shad0 Packages 
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 
\par 
\par 
\par 
\par Subprogram
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 A PL / SQL subprogram :
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard\plain \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 
\shad\f27\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Is a named PL/SQL Module
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 {\shad0 
Is stored in a database in compiled form
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 {\shad0 
Can take parameters, return values to calling environment
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 {\shad0 
Can be invoked in another subprogram when required 
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 
\par Advantages of Subprograms 
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Complied form 
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard\plain \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 
\shad\f27\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Subprograms are stored in complied form. This avoids re-parsing  when multiple users invoke it
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Security & Integrity 
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard\plain \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 
\shad\f27\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Provide security and integrity control by allowing access on the subprogram and not on database objects
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Extensible 
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard\plain \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 
\shad\f27\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Provide extensibility by writing subprograms tailored to suit  the needs of the application
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Modular
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard\plain \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 
\shad\f27\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Provide extensibility by dividing a program into \tab manageable well-defined logic modules
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Reusability and Maintainability 
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard\plain \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 
\shad\f27\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 A validated / tested subprogram can be used in any number of applications.
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 {\shad0 
Modifications easy and at one place, so maintainable
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Abstraction 
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard\plain \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 
\shad\f27\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Hiding actual implementation
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 
\par Types of Subprograms 
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 There are two types of subprograms 
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard\plain \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 
\shad\f27\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Procedures 
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 {\shad0 Functions 
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Generally procedures are used to perform an action and a function is used to compute a value
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0 
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Procedures
\par {\pntext\pard\plain\s2 \f28\fs21 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls4\pnrnot0\pnf28\pnfs21 {\pntxtb n}}\faauto\ls4\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\fs28 A procedure is a subprogram that performs a specific action
\par {\pntext\pard\plain\s2 \f28\fs21 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls4\pnrnot0\pnf28\pnfs21 {\pntxtb n}}\faauto\ls4\outlinelevel1\rin0\lin270\itap0 {\shad0\fs28 
Result of the execution of a procedure is in the form of side effect
\par {\pntext\pard\plain\s2 \f28\fs21 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls4\pnrnot0\pnf28\pnfs21 {\pntxtb n}}\faauto\ls4\outlinelevel1\rin0\lin270\itap0 {\shad0\fs28 
A procedure has  two parts 
\par {\pntext\pard\plain\s3 \f27 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard\plain \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls2\pnrnot0\pnf27\pnfs24 {\pntxtb \'96}}\faauto\ls2\outlinelevel2\rin0\lin585\itap0 
\shad\f27\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\fs24 the procedure specification 
\par {\pntext\pard\plain\s3 \f27 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls2\pnrnot0\pnf27\pnfs24 {\pntxtb \'96}}\faauto\ls2\outlinelevel2\rin0\lin585\itap0 {\shad0\fs24 the procedure body
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 
\par Procedures
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 The procedure specification :
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard\plain \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 
\shad\f27\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Definition of the procedure and its parameters 
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 {\shad0 
It is not necessary to create a procedure which accepts parameters
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 The procedure body :
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard\plain \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 
\shad\f27\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 The procedure body contains 
\par {\pntext\pard\plain\s4 \f28\fs17 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s4\ql \fi-180\li900\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls5\pnrnot0\pnf28\pnfs17 {\pntxtb n}}\faauto\ls5\outlinelevel3\rin0\lin900\itap0 
\shad\f27\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\fs28 declaration section without DECLARE keyword 
\par {\pntext\pard\plain\s4 \f28\fs17 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s4\ql \fi-180\li900\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls5\pnrnot0\pnf28\pnfs17 {\pntxtb n}}\faauto\ls5\outlinelevel3\rin0\lin900\itap0 {\shad0\fs28 an executable section 

\par {\pntext\pard\plain\s4 \f28\fs17 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s4\ql \fi-180\li900\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls5\pnrnot0\pnf28\pnfs17 {\pntxtb n}}\faauto\ls5\outlinelevel3\rin0\lin900\itap0 {\shad0\fs28 
and exception handling sections
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 
\par Creating a New Procedure 
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Syntax 
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0\fs20 CREATE [ OR REPLACE ] PROCEDURE <procedure_name>
\par \tab \tab [ (<argument_1> [mode] <datatype>,
\par \tab \tab    <argument_2> [mode] <datatype>,
\par \tab \tab :
\par \tab \tab )] -- procedure specification
\par IS | AS 
\par \tab \tab -- Declarartions
\par BEGIN
\par \tab \tab <PL / SQL Block> --- procedure body
\par END [< procedure_name>];
\par }\pard\plain \ql \li0\ri0\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 OR REPLACE : 
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard\plain \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 
\shad\f27\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Used to modify an existing procedure
\par }\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel2\rin0\lin585\itap0 {\shad0 
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 mode : [ IN | OUT | IN OUT ]
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard\plain \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 
\shad\f27\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 decides how parameters ( arguments ) are passed
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 
\par Creating a Procedure 
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Example 1 :
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0 \tab Write a procedure to add a new employee to the \tab Emp table.
\par }\pard\plain \s1\qc \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 
\par {\pntext\pard\plain\s2 \f28\fs21 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls4\pnrnot0\pnf28\pnfs21 {\pntxtb n}}\faauto\ls4\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\fs28 Solution :
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0\fs16 
\par }{\shad0\fs24 CREATE OR REPLACE PROCEDURE  AddNewEmp
\par \tab ( p_empno emp.empno%Type,
\par \tab   p_ename emp.ename%Type,
\par \tab   p_deptno emp.deptno%Type) AS 
\par BEGIN 
\par \tab INSERT INTO emp ( empno, ename, deptno )
\par \tab VALUES ( p_empno, p_ename, p_deptno );
\par \tab COMMIT;
\par EXCEPTION
\par \tab WHEN DUP_VAL_ON_INDEX THEN\tab 
\par \tab \tab INSERT INTO errors \tab \tab 
\par \tab \tab VALUES ( p_empno, \lquote Duplicate Employee Number\rquote  );
\par END AddNewEmp;
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 
\par Creating a Procedure 
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Example 2 :
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0 \tab Write a procedure to update the quantity on hand in ItemMast table with quantity issued.
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 Solution :
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0\fs16 
\par }{\shad0\fs24 CREATE PROCEDURE  Issue_Qty
\par \tab (p_itno itemmast.itno%Type, p_qty NUMBER)
\par IS 
\par BEGIN 
\par \tab UPDATE itemmast SET qoh = qoh \endash  p_qty
\par \tab WHERE itno = p_itno;
\par \tab COMMIT;
\par END Issue_Qty;
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 
\par 
\par 
\par Points to Remember 
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 A procedure can be called from another PL/SQL block
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 
A procedure call is a PL/SQL statement itself and not a part of an expression
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 
When a procedure is called, parameters can be passed
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 
\par Parameters and modes 
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Parameters
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard\plain \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 
\shad\f27\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Formal parameters
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 {\shad0 Actual parameters
\par }\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 \shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 Parameter modes
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 
\par Formal Parameters
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Procedure can be declared which accepts parameters
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 
Parameters in the procedure declaration are called as formal parameters
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 The formal parameters are the pl
ace holders for actual parameters
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 
Inside the procedures formal parameters are referred
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\shad0\f1 
\par Actual Parameters
\par {\pntext\pard\plain\s2 \f14 \loch\af14\dbch\af0\hich\f14 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls6\pnrnot0\pnf14\pnfs24 {\pntxtb n}}\faauto\ls6\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\f1 A procedure is called by passing parameters to it
\par {\pntext\pard\plain\s2 \f14 \loch\af14\dbch\af0\hich\f14 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls6\pnrnot0\pnf14\pnfs24 {\pntxtb n}}\faauto\ls6\outlinelevel1\rin0\lin270\itap0 {\shad0\f1 
The parameters passed are called as actual parameters
\par {\pntext\pard\plain\s2 \f14 \loch\af14\dbch\af0\hich\f14 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls6\pnrnot0\pnf14\pnfs24 {\pntxtb n}}\faauto\ls6\outlinelevel1\rin0\lin270\itap0 {\shad0\f1 
Actual parameters contain the values that are passed to the procedures and they receive results from the procedure when it returns
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\shad0\f1 
\par }\pard\plain \ql \li0\ri0\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par 
\par 
\par 
\par 
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\shad0\f1 Parameter  Modes 
\par {\pntext\pard\plain\s2 \f14\fs21 \loch\af14\dbch\af0\hich\f14 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls7\pnrnot0\pnf14\pnfs21 {\pntxtb n}}\faauto\ls7\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\f1\fs28 Formal parameters can have three modes IN, OUT and IN OUT
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0\f1\fs28 \tab \tab }{\b\shad0\f1\fs28 Mode \tab Description 
\par }\pard \s2\ql \fi-1440\li2160\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin2160\itap0 {\shad0\f1\fs28 IN\tab Used to pass values to the called \tab 
subprogram. This is the default mode. Inside the subprogram, the IN parameter acts like a constant \tab i.e. it is considered Read - only. Cannot be modified
\par }\pard \s2\ql \fi720\li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin0\itap0 {\shad0\f1\fs28 OUT\tab \tab Used to return values to the\tab called subprogram. \tab \tab \tab \tab Inside the s
ubprogram, the OUT parameter acts like \tab \tab \tab an uninitialised variable.
\par }\pard \s2\ql \fi-1440\li2160\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin2160\itap0 {\shad0\f1\fs28 IN OUT\tab Combination of IN and OUT.\tab Lets user pass initial value.
\par }\pard \s2\ql \li2160\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin2160\itap0 {\shad0\f1\fs28 The IN OUT parameter can be read or written to inside the called subprogram.
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\shad0\f1 
\par Constraints on Formal Parameters 
\par {\pntext\pard\plain\s2 \f14\fs27 \loch\af14\dbch\af0\hich\f14 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls8\pnrnot0\pnf14\pnfs27 {\pntxtb n}}\faauto\ls8\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\f1\fs36 It is illegal to constraint the parameters in the procedure declaration
\par {\pntext\pard\plain\s2 \f14\fs27 \loch\af14\dbch\af0\hich\f14 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls8\pnrnot0\pnf14\pnfs27 {\pntxtb n}}\faauto\ls8\outlinelevel1\rin0\lin270\itap0 {\shad0\f1\fs36 
Constraining CHAR, VARCHAR with a length and NUMBER with a value or precision and/or scale is illegal
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0 e.g. the Following declaration is illegal \endash 
\par \tab CREATE OR REPLACE PROCEDURE
\par \tab SomeProc (
\par \tab P_Name\tab IN OUT VARCHAR(25),
\par \tab P_Balance\tab IN\tab NUMBER (5) )
\par \tab AS
\par \tab :
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 
The formal parameters are constrained by the declaration of actual parameters
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 
When a procedure is called, along with values of actual parameters constraints are also passed
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\shad0\f1 
\par 
\par Constraints on Formal Parameters 
\par }\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 \shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\fs28 e.g.
\par \tab DECLARE
\par \tab \tab v_name VARCHAR2 (25); 
\par \tab \tab v_balance NUMBER (5);
\par \tab BEGIN
\par \tab \tab :
\par \tab \tab someproc (v_name, v_balance);
\par \tab END;
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\shad0\f1 
\par }\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 \shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\fs28 
The only way to put constraints on a formal parameter in the declaration is using %TYPE in the declaration of procedure.
\par e.g.
\par \tab CREATE OR REPLACE PROCEDURE AddNewEmp (
\par \tab \tab p_empno emp.empno%Type,
\par \tab \tab p_ename emp.empname%Type,
\par \tab \tab p_deptno emp.deptno%Type)
\par \tab AS 
\par \tab BEGIN
\par \tab :
\par \tab END;
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\shad0\f1 
\par Default values for parameters 
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Formal Parameters for subprograms can have default values
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 If a parame
ter has a default value, it does not have to be passed
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 
It if is passed, the value of the actual parameter will be used
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0\fs28 e.g.
\par \tab CREATE PROCEDURE someproc (p_ename emp.ename%TYPE, \tab \tab \tab p_empno emp.empno%TYPE,
\par \tab \tab \tab p_deptno emp.deptno%TYPE := 20 )
\par \tab AS
\par \tab :
\par }\pard\plain \ql \li0\ri0\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\fs60 PL/SQL Subprograms Part II}{\shad0 
\par {\pntext\pard\plain\s2 \f28\fs21 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls4\pnrnot0\pnf28\pnfs21 {\pntxtb n}}\faauto\ls4\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\fs28 Objectives :}{\shad0\fs24 
\par {\pntext\pard\plain\s3 \f27\fs20 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard\plain \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls9\pnrnot0\pnf27\pnfs20 {\pntxtb \'96}}\faauto\ls9\outlinelevel2\rin0\lin585\itap0 
\shad\f27\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\fs20 State & explain creating a Function
\par {\pntext\pard\plain\s3 \f27\fs20 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls9\pnrnot0\pnf27\pnfs20 {\pntxtb \'96}}\faauto\ls9\outlinelevel2\rin0\lin585\itap0 {\shad0\fs20 Construct a Function

\par {\pntext\pard\plain\s3 \f27\fs20 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls9\pnrnot0\pnf27\pnfs20 {\pntxtb \'96}}\faauto\ls9\outlinelevel2\rin0\lin585\itap0 {\shad0\fs20 
State how to execute a Subprogram
\par {\pntext\pard\plain\s3 \f27\fs20 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls9\pnrnot0\pnf27\pnfs20 {\pntxtb \'96}}\faauto\ls9\outlinelevel2\rin0\lin585\itap0 {\shad0\fs20 
State syntax for dropping a Subprogram
\par {\pntext\pard\plain\s3 \f27\fs20 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls9\pnrnot0\pnf27\pnfs20 {\pntxtb \'96}}\faauto\ls9\outlinelevel2\rin0\lin585\itap0 {\shad0\fs20 
List Subprogram categories
\par {\pntext\pard\plain\s3 \f27\fs20 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls9\pnrnot0\pnf27\pnfs20 {\pntxtb \'96}}\faauto\ls9\outlinelevel2\rin0\lin585\itap0 {\shad0\fs20 
Explain what is a package
\par {\pntext\pard\plain\s3 \f27\fs20 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls9\pnrnot0\pnf27\pnfs20 {\pntxtb \'96}}\faauto\ls9\outlinelevel2\rin0\lin585\itap0 {\shad0\fs20 
List package components
\par {\pntext\pard\plain\s3 \f27\fs20 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls9\pnrnot0\pnf27\pnfs20 {\pntxtb \'96}}\faauto\ls9\outlinelevel2\rin0\lin585\itap0 {\shad0\fs20 
State & explain syntax for creating a package
\par {\pntext\pard\plain\s3 \f27\fs20 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls9\pnrnot0\pnf27\pnfs20 {\pntxtb \'96}}\faauto\ls9\outlinelevel2\rin0\lin585\itap0 {\shad0\fs20 
Demonstrate Package creation
\par {\pntext\pard\plain\s3 \f27\fs20 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls9\pnrnot0\pnf27\pnfs20 {\pntxtb \'96}}\faauto\ls9\outlinelevel2\rin0\lin585\itap0 {\shad0\fs20 
State the syntax for dropping a package
\par {\pntext\pard\plain\s3 \f27\fs20 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls9\pnrnot0\pnf27\pnfs20 {\pntxtb \'96}}\faauto\ls9\outlinelevel2\rin0\lin585\itap0 {\shad0\fs20 
Describe Overloading  subprograms in a  Package}{\shad0 
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\fs30 
\par }{\shad0 Functions
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 A function is a subprogram that returns a value
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0\fs20 
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 
Functions and procedures have similar structure except that the functions have a
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard\plain \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 
\shad\f27\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0  RETURN clause and 
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 {\shad0  use RETURN statement

\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\shad0\fs30 
\par }{\b\shad0 Creating Functions}{\b\shad0\f1\fs46  
\par }\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 \shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\shad0 Syntax :}{\b\shad0\fs28 
\par }{\shad0\fs28 CREATE [OR REPLACE] FUNCTION <function_name> [(
\par \tab \tab <argument_1> [mode] <datatype>,
\par \tab \tab <argument_2> [mode] <datatype> )]
\par \tab RETURN <datatype> -- function specification
\par \tab IS | AS
\par \tab <PL/SQL Block>   -- function body}{\shad0 
\par {\pntext\pard\plain\s2 \f28\fs21 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls4\pnrnot0\pnf28\pnfs21 {\pntxtb n}}\faauto\ls4\outlinelevel1\rin0\lin270\itap0 {\shad0\fs28 RETURN clause
\par {\pntext\pard\plain\s3 \f27 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard\plain \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls2\pnrnot0\pnf27\pnfs24 {\pntxtb \'96}}\faauto\ls2\outlinelevel2\rin0\lin585\itap0 
\shad\f27\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\fs24 RETURN clause is used in function specification to specify return datatype
\par }\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 \shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\fs16 
\par {\pntext\pard\plain\s2 \f28\fs21 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls4\pnrnot0\pnf28\pnfs21 {\pntxtb n}}\faauto\ls4\outlinelevel1\rin0\lin270\itap0 {\shad0\fs28 RETURN statement :

\par {\pntext\pard\plain\s3 \f27 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard\plain \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls2\pnrnot0\pnf27\pnfs24 {\pntxtb \'96}}\faauto\ls2\outlinelevel2\rin0\lin585\itap0 
\shad\f27\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\fs24 RETURN statement is used to return control to the calling environment with the value 
\par {\pntext\pard\plain\s3 \f27 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls2\pnrnot0\pnf27\pnfs24 {\pntxtb \'96}}\faauto\ls2\outlinelevel2\rin0\lin585\itap0 {\shad0\fs24 Syntax :
\par {\pntext\pard\plain\s4 \f28\fs12 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s4\ql \fi-180\li900\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls10\pnrnot0\pnf28\pnfs12 {\pntxtb n}}\faauto\ls10\outlinelevel3\rin0\lin900\itap0 
\shad\f27\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\fs20 RETURN expression ;
\par {\pntext\pard\plain\s3 \f27 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard\plain \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls2\pnrnot0\pnf27\pnfs24 {\pntxtb \'96}}\faauto\ls2\outlinelevel2\rin0\lin585\itap0 
\shad\f27\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\fs24 There can be more than one RETURN statements inside the function but only one of them will be executed}{\shad0\fs32 
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\shad0\f1 Creating Function}{\b\shad0\f1\fs66  
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Example 1:
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0 \tab Write a subprogram to retrieve the quantity on hand from ItemMast table for the given item number, using a function.

\par }{\shad0\fs28 Solution :}{\shad0\fs24 
\par }{\shad0\fs10 
\par }{\shad0\fs24 CREATE FUNCTION balance_qoh (
\par  \tab p_itno itemmast.itno%TYPE ) RETURN NUMBER
\par IS
\par \tab v_balqoh itemmast.qoh%TYPE ; -- Local variable
\par BEGIN
\par \tab SELECT qoh INTO v_balqoh FROM itemmast
\par \tab WHERE itno = p_itno;
\par \tab RETURN (v_balqoh);
\par END;
\par }{\shad0\fs28 
\par Example 2 :
\par \tab Write a function that accepts employee number and  returns the salary class as `LOW\rquote , `MEDIUM\rquote , `HIGH\rquote  based on his salary.
\par }{\shad0\fs14 
\par }{\shad0\fs28 \tab Salary\tab \tab \tab \tab Class
\par \tab NULL\tab \tab \tab \tab NOT APPLICABLE\tab 
\par \tab less than 3000\tab \tab \tab LOW
\par \tab between 3000 and 5000\tab MEDIUM
\par \tab greater than 5000\tab \tab HIGH}{\shad0 
\par {\pntext\pard\plain\s2 \f14\fs21 \loch\af14\dbch\af0\hich\f14 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls7\pnrnot0\pnf14\pnfs21 {\pntxtb n}}\faauto\ls7\outlinelevel1\rin0\lin270\itap0 {\shad0\f1\fs28 Solution :
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0\f1\fs20 \tab CREATE OR REPLACE FUNCTION sal_class (
\par \tab \tab p_empno emp.empno%TYPE )
\par \tab RETURN VARCHAR2 IS
\par \tab \tab v_sal emp.sal%TYPE;
\par \tab BEGIN
\par \tab \tab SELECT sal INTO v_sal FROM emp
\par \tab \tab WHERE empno = p_empno;
\par \tab \tab IF v_sal IS NULL THEN
\par \tab \tab \tab RETURN `NOT APPLICABLE\rquote ;
\par \tab \tab ELSIF v_sal < 3000 THEN
\par \tab \tab \tab RETURN `LOW\rquote ;
\par \tab \tab ELSIF sal <=5000 THEN
\par \tab \tab \tab RETURN `MEDIUM\rquote ;
\par \tab \tab ELSE
\par \tab \tab \tab RETURN `HIGH\rquote ;
\par \tab \tab END IF;
\par \tab END;
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\shad0\f1 Executing Subprograms}{\b\shad0\f1\fs46  
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Once created a subprogram can be
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard\plain \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 
\shad\f27\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 executed interactively
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 {\shad0 
called from the other subprograms
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\shad0\f1 
\par Executing Subprograms Interactively 
\par {\pntext\pard\plain\s2 \f28\fs21 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls4\pnrnot0\pnf28\pnfs21 {\pntxtb n}}\faauto\ls4\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\fs28 A subprogram can be executed interactively by Oracle tools.
\par {\pntext\pard\plain\s2 \f28\fs21 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls4\pnrnot0\pnf28\pnfs21 {\pntxtb n}}\faauto\ls4\outlinelevel1\rin0\lin270\itap0 {\shad0\fs28 
To execute a subprogram the EXECUTE statement is used.
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0\fs28 
\par {\pntext\pard\plain\s2 \f28\fs21 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls4\pnrnot0\pnf28\pnfs21 {\pntxtb n}}\faauto\ls4\outlinelevel1\rin0\lin270\itap0 {\shad0\fs28 Syntax :
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0\fs28 \tab EXECUTE subprogram_name(parameter(s));}{\shad0 
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 Example :
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0\fs28 \tab SQL> EXECUTE issue_qty (1950, 40);
\par \tab 
\par {\pntext\pard\plain\s2 \f28\fs21 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls4\pnrnot0\pnf28\pnfs21 {\pntxtb n}}\faauto\ls4\outlinelevel1\rin0\lin270\itap0 {\shad0\fs28 
You need to include the name of the subprogram owner in the execution call to execute the subprogram owned by some other user
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 Syntax :
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0 \tab }{\shad0\fs28 SQL> EXECUTE owner_name.subprogram_name (parameters);}{\shad0 
\par 
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 Example :
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0 \tab }{\shad0\fs28 SQL> EXECUTE scott.issue_qty (1950, 40);
\par }\pard\plain \s1\qc \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\shad0\f1 
\par Calling Subprograms from other programs 
\par {\pntext\pard\plain\s2 \f28\fs21 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls4\pnrnot0\pnf28\pnfs21 {\pntxtb n}}\faauto\ls4\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\fs28 Once a subprogram is created, it can be invoked by other programs.
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0\fs14 
\par {\pntext\pard\plain\s2 \f28\fs21 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls4\pnrnot0\pnf28\pnfs21 {\pntxtb n}}\faauto\ls4\outlinelevel1\rin0\lin270\itap0 {\shad0\fs28 Example :
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0 \tab }{\shad0\fs20 --Calling calc_int procedure
\par \tab :
\par \tab BEGIN
\par \tab \tab :
\par \tab \tab calc_int (X, Y);
\par \tab \tab :
\par \tab END;
\par }\pard\plain \s1\qc \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\shad0\f1 
\par 
\par Calling Subprograms from other programs
\par }\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 \shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\fs28 -- Calling calc_int function
\par :
\par BEGIN
\par \tab \tab :
\par \tab \tab variable1 := calc_int (X, Y);
\par }\pard\plain \s4\ql \fi-180\li900\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel3\rin0\lin900\itap0 \shad\f27\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\fs28 -- OR
\par }\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 \shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\fs28 \tab \tab IF calc_int (X, Y) = \'85\'85
.. THEN
\par \tab \tab :
\par END;
\par 
\par Example 2 :
\par }{\shad0\fs24 \tab DECLARE
\par \tab \tab v_empno emp.empno%TYPE;
\par \tab \tab v_class VARCHAR2 (10);
\par \tab BEGIN
\par \tab \tab :
\par \tab \tab v_empno := 1234;
\par \tab \tab v_class := sal_class (v_empno);
\par \tab \tab :
\par \tab END;
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\shad0\f1 
\par Dropping a Subprogram
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 If a subprogram is not required it can be deleted using DROP command
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 Syntax:
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0 \tab DROP PROCEDURE | FUNCTION
\par \tab <procedure_name | <function_name>;
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\shad0\f1 
\par Subprogram Locations
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Subprogram categories on the basis of their location are
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard\plain \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 
\shad\f27\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Stored Subprograms
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 {\shad0 Local Subprograms
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\shad0\f1 
\par 
\par Stored  Subprograms
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Stored subprogram is created using CREATE command.
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0\fs14 
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 Stored subprogram is stored 
as a separate database object
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\shad0\f1 
\par Local Subprograms 
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Specific actions that are relevant for a particular PL/SQL block only, written inside Subprograms in its declarative section.
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 
They are known as Local Subprograms.
\par {\pntext\pard\plain\s2 \shad\f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {
Local subprograms must be declared at the end of the declarative section.
\par }\pard\plain \ql \li0\ri0\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par }{create or replace procedure outer
\par  is
\par  procedure inner
\par  is
\par  begin
\par  dbms_output.put_line('inner');
\par  end inner;
\par  begin
\par  inner;
\par  dbms_output.put_line('outer');
\par  end;}{
\par 
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Recompiling subprograms
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard\plain \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 
\shad\f27\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 If the subprogram refers to some non-existing objects or has some errors, it will be created with compilation errors.
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 {\shad0 
After fixing the problems you have to recompile the subprogram.
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Syntax :
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0 \tab }{\shad0\fs28 ALTER PROCEDURE | FUNCTION
\par \tab <procedure_name> | <function_name> COMPILE;
\par }{\shad0 
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\fs60 
\par 
\par PACKAGES}{\shad0 
\par {\pntext\pard\plain\s2 \f28\fs21 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls4\pnrnot0\pnf28\pnfs21 {\pntxtb n}}\faauto\ls4\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\fs28 A package is a database object that groups logically related PL/SQL objects
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0\fs10 
\par {\pntext\pard\plain\s2 \f28\fs21 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls4\pnrnot0\pnf28\pnfs21 {\pntxtb n}}\faauto\ls4\outlinelevel1\rin0\lin270\itap0 {\shad0\fs28 
PL/SQL objects that can be grouped in a package are
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard\plain \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 
\shad\f27\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Procedure, Functions
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 {\shad0 Variables, Constants, etc.

\par }\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 \shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\fs10 
\par {\pntext\pard\plain\s2 \f28\fs21 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls4\pnrnot0\pnf28\pnfs21 {\pntxtb n}}\faauto\ls4\outlinelevel1\rin0\lin270\itap0 {\shad0\fs28 
A package encapsulates related procedures, functions, associated cursors and variables together as a logical unit in the database.
\par }\pard\plain \ql \li0\ri0\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par {\pntext\pard\plain\s2 \f28\fs21 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls4\pnrnot0\pnf28\pnfs21 {\pntxtb n}}\faauto\ls4\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\fs28 The entire package is loaded into memory when a procedure, within the package, is called for the first time.
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0\fs28 
\par {\pntext\pard\plain\s2 \f28\fs21 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls4\pnrnot0\pnf28\pnfs21 {\pntxtb n}}\faauto\ls4\outlinelevel1\rin0\lin270\itap0 {\shad0\fs28 
This reduces unnecessary disk I/O and network traffic.
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0\fs28 
\par {\pntext\pard\plain\s2 \f28\fs21 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls4\pnrnot0\pnf28\pnfs21 {\pntxtb n}}\faauto\ls4\outlinelevel1\rin0\lin270\itap0 {\shad0\fs28 
There is a considerable performance improvement because of this encapsulation.
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\shad0\f1 
\par Packages components 
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Packages are made of two components 
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard\plain \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 
\shad\f27\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Package specification and
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 {\shad0 Package Body
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 The package specification is the interface to the package and has declarative statements.
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0\fs10 
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 
The package body contains implementation of procedures and functions.
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\shad0\f1 
\par Creating a Package
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 A package comprises of the package specifications and the package body.
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 
The package specification and body are created and stored separately in the data dictionary.
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 
You can declare program objects such as procedures, functions, variables, constants, cursors etc. in the package specifications.
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 
Oracle declares these objects as public objects.
\par {\pntext\pard\plain\s2 \f14 \loch\af14\dbch\af0\hich\f14 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls6\pnrnot0\pnf14\pnfs24 {\pntxtb n}}\faauto\ls6\outlinelevel1\rin0\lin270\itap0 {\shad0\f1 
These objects can be referenced from outside the package as well as by objects inside the Package.
\par {\pntext\pard\plain\s2 \f14 \loch\af14\dbch\af0\hich\f14 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls6\pnrnot0\pnf14\pnfs24 {\pntxtb n}}\faauto\ls6\outlinelevel1\rin0\lin270\itap0 {\shad0\f1 
Package specification contains information about the contents of the package.
\par {\pntext\pard\plain\s2 \f14\fs21 \loch\af14\dbch\af0\hich\f14 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls7\pnrnot0\pnf14\pnfs21 {\pntxtb n}}\faauto\ls7\outlinelevel1\rin0\lin270\itap0 {\shad0\f1\fs28 Syntax :}{
\shad0\f1\fs24 
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0\f1\fs22 \tab CREATE [OR REPLACE] PACKAGE <package_name>
\par \tab AS
\par \tab \tab /* Declaration of Global Variables, constants (if any);
\par \tab \tab Cursors;
\par \tab \tab Procedures & functions;
\par \tab \tab */
\par \tab END [<package_name>];
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\shad0\f1 Creating a Package Body 
\par {\pntext\pard\plain\s2 \f28\fs21 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls4\pnrnot0\pnf28\pnfs21 {\pntxtb n}}\faauto\ls4\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\fs28 You can create a Package Body only after you have created the Package Specifications.
\par {\pntext\pard\plain\s2 \f28\fs21 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls4\pnrnot0\pnf28\pnfs21 {\pntxtb n}}\faauto\ls4\outlinelevel1\rin0\lin270\itap0 {\shad0\fs28 
The Package Body is used to define the code for the procedures, functions specified in the package specification.
\par {\pntext\pard\plain\s2 \f28\fs21 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls4\pnrnot0\pnf28\pnfs21 {\pntxtb n}}\faauto\ls4\outlinelevel1\rin0\lin270\itap0 {\shad0\fs28 
You can declare objects in the package body also.
\par {\pntext\pard\plain\s2 \f28\fs21 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls4\pnrnot0\pnf28\pnfs21 {\pntxtb n}}\faauto\ls4\outlinelevel1\rin0\lin270\itap0 {\shad0\fs28 
These objects are known as private objects and can be referenced only inside the package.
\par {\pntext\pard\plain\s2 \f28\fs21 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls4\pnrnot0\pnf28\pnfs21 {\pntxtb n}}\faauto\ls4\outlinelevel1\rin0\lin270\itap0 {\shad0\fs28 
The package body is optional.
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\shad0\f1 
\par Creating a Package Body 
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Syntax :
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0 \tab }{\shad0\fs24 CREATE [OR REPLACE] PACKAGE BODY
\par \tab \tab <package_name> AS
\par \tab \tab /*
\par \tab \tab \tab Private type and object declarations;
\par \tab \tab \tab Subprogram bodies ;
\par \tab \tab */
\par \tab BEGIN
\par \tab \tab \'85\'85.. code ;
\par \tab END;
\par }\pard\plain \ql \li0\ri0\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par {\pntext\pard\plain\s2 \f28\fs27 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls11\pnrnot0\pnf28\pnfs27 {\pntxtb n}}\faauto\ls11\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\fs36 Example :
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0\fs36 \tab }{\shad0 Create a package employee which can be used to manipulate the employee\rquote 
s records in the emp table.
\par }{\shad0\fs16 
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard\plain \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 
\shad\f27\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Functions : ins_employee
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 {\shad0 
Procedures : del_employee and raise_salary
\par {\pntext\pard\plain\s3 \f27\fs28 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf27\pnfs28 {\pntxtb \'96}}\faauto\ls3\outlinelevel2\rin0\lin585\itap0 {\shad0 Exception : salary_missing

\par }\pard\plain \s1\qc \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 
\par }\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 \shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\f1\fs22 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par \tab }{\b\shad0\f1\fs18 CREATE PACKAGE Employee AS}{\shad0\f1\fs18 
\par \tab \tab /* Global declarations */
\par \tab \tab Salary_Missing EXCEPTION;
\par 
\par  \tab /* Global Functions declarations */
\par \tab \tab FUNCTION ins_employee (
\par \tab \tab \tab p_ename\tab CHAR,
\par \tab \tab \tab p_job\tab \tab CHAR,
\par \tab \tab \tab p_mgr\tab \tab NUMBER,
\par \tab \tab \tab p_sal\tab \tab NUMBER,
\par \tab \tab \tab p_comm\tab \tab NUMBER,
\par \tab \tab \tab p_deptno\tab NUMBER ) \tab 
\par \tab \tab RETURN NUMBER;
\par }{\shad0\f1\fs16 \tab /* Global Procedures declarations */
\par \tab \tab PROCEDURE del_employee (p_empno  NUMBER);
\par \tab 
\par \tab \tab PROCEDURE raise_salary (p_empno NUMBER, incr NUMBER);
\par }{\b\shad0\f1\fs16 \tab 
\par      END employee;}{\shad0\f1\fs16 
\par \tab --package specification ends here}{\shad0\f1\fs18 
\par }\pard\plain \s1\qc \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\fs22 
\par }\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 \shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\f1\fs22 \tab }{\b\shad0\f1\fs18 
CREATE PACKAGE BODY employee AS
\par }{\shad0\f1\fs18 \tab \tab /* define the local variable */
\par \tab \tab v_number_joined NUMBER := 0;
\par \tab \tab /* define the function ins_employee */
\par \tab \tab }{\b\shad0\f1\fs18 FUNCTION ins_employee (
\par }{\shad0\f1\fs18 \tab \tab \tab p_ename\tab CHAR,
\par \tab \tab \tab p_job\tab \tab CHAR,
\par \tab \tab \tab p_mgr\tab \tab NUMBER,
\par \tab \tab \tab p_sal\tab \tab NUMBER,
\par \tab \tab \tab p_comm\tab \tab NUMBER,
\par \tab \tab \tab p_deptno\tab NUMBER }{\b\shad0\f1\fs18 ) RETURN NUMBER IS}{\shad0\f1\fs18 
\par \tab \tab \tab new_empno NUMBER;\tab  /* Local Variable */
\par \tab \tab }{\b\shad0\f1\fs18 BEGIN
\par }{\shad0\f1\fs18 \tab \tab \tab /* It is assumed that the sequence empno_seq is already existing */
\par \tab \tab \tab SELECT empno_seq.NEXTVAL INTO new_empno FROM dual;
\par \tab \tab \tab INSERT INTO emp VALUES
\par \tab \tab \tab (new_empno, p_ename, p_job, p_mgr, SYSDATE, p_sal, \tab \tab \tab \tab p_comm, p_deptno );
\par  \tab \tab \tab v_number_joined := v_number_joined + 1;
\par \tab \tab \tab RETURN new_empno;
\par \tab \tab }{\b\shad0\f1\fs18 END ins_ employee}{\shad0\f1\fs18 ;
\par }\pard\plain \s1\qc \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\fs22 
\par }\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 \shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\f1\fs18 \tab }{\b\shad0\f1\fs18 
PROCEDURE del_employee}{\shad0\f1\fs18  ( p_empno NUMBER ) }{\b\shad0\f1\fs18 IS}{\shad0\f1\fs18 
\par \tab }{\b\shad0\f1\fs18 BEGIN}{\shad0\f1\fs18 
\par \tab \tab DELETE FROM emp WHERE empno = p_empno;
\par \tab }{\b\shad0\f1\fs18 END del_employee;}{\shad0\f1\fs18 
\par \tab }{\b\shad0\f1\fs18 PROCEDURE raise_salary ( p_empno NUMBER, p_incr NUMBER)}{\shad0\f1\fs18  IS 
\par \tab \tab v_Current_sal NUMBER;
\par \tab }{\b\shad0\f1\fs18 BEGIN}{\shad0\f1\fs18 
\par \tab \tab SELECT sal INTO v_Current_sal FROM emp WHERE empno = p_empno;
\par \tab \tab IF v_Current_sal IS NULL THEN
\par \tab \tab \tab RAISE salary_missing;
\par \tab \tab ELSE
\par \tab \tab \tab UPDATE emp SET sal=sal + p_incr WHERE empno = p_empno;
\par \tab \tab END IF;
\par \tab }{\b\shad0\f1\fs18 EXCEPTION}{\shad0\f1\fs18 
\par \tab \tab WHEN salary_missing THEN
\par \tab \tab \tab raise_application_error  (-20230, `SALARY IS NULL\rquote );
\par \tab }{\b\shad0\f1\fs18 END raise_salary;
\par END employee;
\par }{\shad0\f1\fs18 /* end of the package body employee */}{\shad0\f1 
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\shad0\f1 Referencing the contents of a package }{\shad0\f1 

\par {\pntext\pard\plain\s2 \f28\fs18 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls12\pnrnot0\pnf28\pnfs18 {\pntxtb n}}\faauto\ls12\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\fs24 A package is a library of related procedures, functions etc.
\par {\pntext\pard\plain\s2 \f28\fs18 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls12\pnrnot0\pnf28\pnfs18 {\pntxtb n}}\faauto\ls12\outlinelevel1\rin0\lin270\itap0 {\shad0\fs24 
The contents of a package can be referred from
\par {\pntext\pard\plain\s3 \f27 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard\plain \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls2\pnrnot0\pnf27\pnfs24 {\pntxtb \'96}}\faauto\ls2\outlinelevel2\rin0\lin585\itap0 
\shad\f27\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\fs24 a subprogram
\par {\pntext\pard\plain\s3 \f27 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls2\pnrnot0\pnf27\pnfs24 {\pntxtb \'96}}\faauto\ls2\outlinelevel2\rin0\lin585\itap0 {\shad0\fs24 an application program

\par {\pntext\pard\plain\s3 \f27 \loch\af27\dbch\af0\hich\f27 \'96\tab}}\pard \s3\ql \fi-225\li585\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls2\pnrnot0\pnf27\pnfs24 {\pntxtb \'96}}\faauto\ls2\outlinelevel2\rin0\lin585\itap0 {\shad0\fs24 an Oracle tool
\par {\pntext\pard\plain\s2 \f28\fs18 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls12\pnrnot0\pnf28\pnfs18 {\pntxtb n}}\faauto\ls12\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\fs24 The objects declared in a package need to be qualified with package name using dot notation.
\par {\pntext\pard\plain\s2 \f28\fs18 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls12\pnrnot0\pnf28\pnfs18 {\pntxtb n}}\faauto\ls12\outlinelevel1\rin0\lin270\itap0 {\shad0\fs24 Syntax :
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0\fs24 \tab Package_name.package_object_name;
\par }{\shad0\fs28 
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\shad0\f1 Referencing a}{\b\shad0\f1\fs60  }{\b\shad0\f1 
packaged object \line from a subprogram}{\b\shad0\f1\fs54  
\par {\pntext\pard\plain\s2 \f28\fs21 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls4\pnrnot0\pnf28\pnfs21 {\pntxtb n}}\faauto\ls4\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\fs28 Example : Referencing procedure DEPOSIT_PROC in package ACCT_TRANSFER from a procedure ACCOUNT.
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0\fs24 \tab 
\par \tab PROCEDURE account (acct_no NUMBER) AS
\par \tab BEGIN
\par \tab \tab :
\par \tab acct_transfer.deposit_proc(acct_no, trans_amt);
\par \tab \tab :
\par \tab END;
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\shad0\f1 
\par Referencing a packaged object\line from an Oracle Tool}{\b\shad0\f1\fs60 
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Example : Referencing procedure DEPOSIT_PROC from SQL*PLUS prompt.
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0\fs14 \tab 
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 
SQL>EXECUTE acct_transfer.deposit_proc(acct_no, trans_amt);
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\shad0\f1 
\par Replacing a Package 
\par {\pntext\pard\plain\s2 \f28\fs21 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls4\pnrnot0\pnf28\pnfs21 {\pntxtb n}}\faauto\ls4\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0\fs28 You can\rquote t modify the specification of the body of a package.
\par {\pntext\pard\plain\s2 \f28\fs21 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls4\pnrnot0\pnf28\pnfs21 {\pntxtb n}}\faauto\ls4\outlinelevel1\rin0\lin270\itap0 {\shad0\fs28 
You need to redefine the package along with changes incorporated.
\par {\pntext\pard\plain\s2 \f28\fs21 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls4\pnrnot0\pnf28\pnfs21 {\pntxtb n}}\faauto\ls4\outlinelevel1\rin0\lin270\itap0 {\shad0\fs28 
Use REPLACE option with CREATE statement.
\par {\pntext\pard\plain\s2 \f28\fs21 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls4\pnrnot0\pnf28\pnfs21 {\pntxtb n}}\faauto\ls4\outlinelevel1\rin0\lin270\itap0 {\shad0\fs28 Syntax :
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0 \tab }{\shad0\fs24 CREATE OR REPLACE
\par \tab [PACKAGE | PACKAGE BODY] <package_name>
\par \tab AS
\par \tab [package_specification> | <package_body>];}{\shad0 
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\shad0\f1 
\par Dropping a Package 
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 You can drop a package from the database when the package is no longer required.
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0\fs14 
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 Use DROP statement.
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0\fs14 
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 Syntax :
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0 \tab }{\shad0\fs28 DROP [PACKAGE | PACKAGE BODY]
\par \tab <package_name>;}{\shad0 
\par }\pard\plain \s1\ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\outlinelevel0\rin0\lin0\itap0 \shad\f27\fs40\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\shad0\f1 
\par Overloading subprograms 
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard\plain \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 
\shad\f27\fs32\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\shad0 Inside a package, procedures and functions can be overloaded.
\par {\pntext\pard\plain\s2 \f28 \loch\af28\dbch\af0\hich\f28 \'6e\tab}}\pard \s2\ql \fi-270\li270\ri0\nowidctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf28\pnfs24 {\pntxtb n}}\faauto\ls1\outlinelevel1\rin0\lin270\itap0 {\shad0 
This means there can be more than one procedures or functions with same name, but with different parameters.
\par }\pard \s2\ql \fi-270\li270\ri0\nowidctlpar\faauto\outlinelevel1\rin0\lin270\itap0 {\shad0\fs24 
\par \tab CREATE OR REPLACE PACKAGE emp_package IS
\par \tab \tab PROCEDURE AddNewEmp (
\par \tab \tab \tab P_empno\tab emp.empno% TYPE,
\par \tab \tab \tab P_ename\tab emp.ename%TYPE,
\par \tab \tab \tab P_deptno\tab emp.deptno%TYPE ); 
\par }{\shad0\fs10 \tab }{\shad0\fs24 
\par \tab \tab PROCEDURE AddNewEmp (
\par \tab \tab \tab P_empno\tab emp.empno%TYPE,
\par \tab \tab \tab P_ename\tab emp.ename%TYPE;
\par \tab \tab \tab P_dname\tab dept.dname%TYPE );
\par \tab END emp_package;
\par }{\b\shad0\fs20 
\par CREATE OR REPLACE PACKAGE BODY emp_package 
\par IS
\par }{\shad0\fs20 --procedure to add a new employee with department number}{\shad0\fs24 
\par }{\shad0 \tab }{\shad0\fs20 PROCEDURE AddNewEmp (
\par \tab \tab p_empno\tab emp.empno%TYPE;
\par \tab \tab p_ename\tab emp.ename%TYPE;
\par \tab \tab p_deptno\tab emp.deptno%TYPE ) IS
\par \tab BEGIN
\par \tab \tab INSERT INTO emp (empno, ename, deptno)
\par \tab \tab VALUES (p_empno, p_ename, p_deptno);
\par \tab \tab COMMIT;
\par \tab END;
\par }{\shad0\fs18 
\par \tab --procedure to add a new employee with department name
\par \tab PROCEDURE AddNewEmp (
\par \tab \tab p_empno\tab emp.empno%TYPE;
\par \tab \tab p_ename\tab emp.ename%TYPE;
\par \tab \tab p_dname\tab dept.dname%TYPE )
\par \tab IS
\par \tab \tab v_deptno\tab emp.deptno%TYPE;
\par \tab BEGIN
\par \tab \tab SELECT deptno INTO v_deptno FROM dept WHERE dname = p_dname;
\par \tab \tab INSERT INTO emp (empno, ename, deptno)
\par \tab \tab VALUES (p_empno, p_ename, v_deptno); 
\par \tab \tab COMMIT;
\par \tab END;
\par }{\b\shad0\fs18 END emp_package;
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\par }}